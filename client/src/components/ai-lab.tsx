import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";

interface Industry {
  id: string;
  name: string;
  icon: string;
  description: string;
  challenges: string[];
  aiSolutions: string[];
  sampleQuestions: string[];
}

const industries: Industry[] = [
  {
    id: "ecommerce",
    name: "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω",
    icon: "üõçÔ∏è",
    description: "E-commerce –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π",
    challenges: [
      "–í–æ–ø—Ä–æ—Å—ã –æ —Ä–∞–∑–º–µ—Ä–∞—Ö –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö —Ç–æ–≤–∞—Ä–æ–≤",
      "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏", 
      "–í–æ–∑–≤—Ä–∞—Ç—ã –∏ –æ–±–º–µ–Ω—ã",
      "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∞–π—Ç–æ–º"
    ],
    aiSolutions: [
      "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∞–∑–æ–π —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ –Ω–∞–ª–∏—á–∏–∏",
      "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–µ —Ç—Ä–µ–∫–∏–Ω–≥–∞ –∑–∞–∫–∞–∑–æ–≤",
      "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤",
      "–≠—Å–∫–∞–ª–∞—Ü–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º"
    ],
    sampleQuestions: [
      "–ï—Å—Ç—å –ª–∏ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ Nike Air Max –≤ —Ä–∞–∑–º–µ—Ä–µ 42?",
      "–ì–¥–µ –º–æ–π –∑–∞–∫–∞–∑ ‚Ññ12345?",
      "–ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å —Ç–æ–≤–∞—Ä?"
    ]
  },
  {
    id: "education",
    name: "–û–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∞",
    icon: "üéì",
    description: "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –∫—É—Ä—Å–∞–º–∏ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π",
    challenges: [
      "–í–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –∫—É—Ä—Å–æ–≤",
      "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ —É—Ä–æ–∫–∞–º",
      "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –¥–∏–ø–ª–æ–º—ã",
      "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏"
    ],
    aiSolutions: [
      "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ –≤—Å–µ–º –∫—É—Ä—Å–∞–º –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º",
      "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –¥–æ—Å—Ç—É–ø–∞",
      "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤—ã–¥–∞—á–∞ —Å–ø—Ä–∞–≤–æ–∫ –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏",
      "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º –∑–∞–Ω—è—Ç–∏–π"
    ],
    sampleQuestions: [
      "–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –∫—É—Ä—Å 'Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö'?",
      "–ù–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —É—Ä–æ–∫, —á—Ç–æ –¥–µ–ª–∞—Ç—å?",
      "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç?"
    ]
  },
  {
    id: "saas",
    name: "SaaS-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞",
    icon: "‚ö°",
    description: "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∫–∞–∫ —Å–µ—Ä–≤–∏—Å –¥–ª—è –±–∏–∑–Ω–µ—Å–∞",
    challenges: [
      "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã",
      "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏",
      "–ë–∏–ª–ª–∏–Ω–≥ –∏ –ø–æ–¥–ø–∏—Å–∫–∏",
      "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π"
    ],
    aiSolutions: [
      "–ü–æ—à–∞–≥–æ–≤—ã–µ –≥–∞–π–¥—ã –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ",
      "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ API –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º",  
      "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏",
      "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º –∏ —Ä–µ—à–µ–Ω–∏—è"
    ],
    sampleQuestions: [
      "–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å CRM –∫ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ?",
      "–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–∞—Å—å –¥–≤–æ–π–Ω–∞—è –æ–ø–ª–∞—Ç–∞?",
      "–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"
    ]
  }
];

interface ProcessStep {
  id: number;
  title: string;
  description: string;
  duration: number;
  details: string[];
}

const processSteps: ProcessStep[] = [
  {
    id: 1,
    title: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö",
    description: "–ò–∑—É—á–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞",
    duration: 2000,
    details: [
      "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º FAQ –∏ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π",
      "–ò–∑—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–æ–≤",
      "–í—ã—è–≤–ª—è–µ–º —Ç–∏–ø–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏",
      "–û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ–Ω –∏ —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è"
    ]
  },
  {
    id: 2,
    title: "–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏",
    description: "–°–æ–∑–¥–∞—ë–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ AI-–∞–≥–µ–Ω—Ç–∞",
    duration: 3000,
    details: [
      "–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω–µ–π—Ä–æ–Ω–Ω—É—é —Å–µ—Ç—å",
      "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏",
      "–û–±—É—á–∞–µ–º –Ω–∞ –≤–∞—à–∏—Ö –ø—Ä–∏–º–µ—Ä–∞—Ö",
      "–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤"
    ]
  },
  {
    id: 3,
    title: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
    description: "–ü–æ–¥–∫–ª—é—á–∞–µ–º –∫ –≤–∞—à–∏–º —Å–∏—Å—Ç–µ–º–∞–º",
    duration: 2500,
    details: [
      "–°–æ–∑–¥–∞—ë–º API-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö", 
      "–ü–æ–¥–∫–ª—é—á–∞–µ–º –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã",
      "–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö"
    ]
  }
];

interface AILabProps {
  onContactModalOpen?: () => void;
}

export function AILab({ onContactModalOpen }: AILabProps) {
  const [selectedIndustry, setSelectedIndustry] = useState<Industry | null>(null);
  const [currentStep, setCurrentStep] = useState(0);
  const [isProcessing, setIsProcessing] = useState(false);
  const [processComplete, setProcessComplete] = useState(false);
  const [currentStepDetails, setCurrentStepDetails] = useState<string[]>([]);
  const [visibleDetails, setVisibleDetails] = useState(0);

  useEffect(() => {
    if (isProcessing && selectedIndustry) {
      const step = processSteps[currentStep];
      if (step) {
        setCurrentStepDetails(step.details);
        setVisibleDetails(0);
        
        // Show details one by one
        step.details.forEach((_, index) => {
          setTimeout(() => {
            setVisibleDetails(index + 1);
          }, (index + 1) * (step.duration / step.details.length));
        });

        setTimeout(() => {
          if (currentStep < processSteps.length - 1) {
            setCurrentStep(currentStep + 1);
          } else {
            setIsProcessing(false);
            setProcessComplete(true);
          }
        }, step.duration);
      }
    }
  }, [currentStep, isProcessing, selectedIndustry]);

  const startProcess = (industry: Industry) => {
    setSelectedIndustry(industry);
    setCurrentStep(0);
    setIsProcessing(true);
    setProcessComplete(false);
    setVisibleDetails(0);
  };

  const resetLab = () => {
    setSelectedIndustry(null);
    setCurrentStep(0);
    setIsProcessing(false);
    setProcessComplete(false);
    setVisibleDetails(0);
  };

  return (
    <section id="ai-lab" className="relative z-10 py-20 px-6 bg-[var(--dark-secondary)]/10">
      <div className="max-w-6xl mx-auto">
        <div className="text-center mb-16">
          <div className="inline-flex items-center space-x-2 mb-4">
            <div className="w-2 h-2 bg-[var(--accent-primary)] rounded-full animate-pulse"></div>
            <span className="text-xs text-[var(--text-subtle)] font-medium tracking-wide uppercase">
              AI-–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è
            </span>
            <div className="w-2 h-2 bg-[var(--accent-secondary)] rounded-full animate-pulse delay-300"></div>
          </div>
          <h2 className="text-3xl md:text-4xl font-light mb-6 tracking-tight">
            –ó–∞–≥–ª—è–Ω—É—Ç—å –ø–æ–¥ –∫–∞–ø–æ—Ç –Ω–∞—à–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
          </h2>
          <p className="text-lg text-[var(--text-muted)] font-light max-w-2xl mx-auto leading-relaxed">
            –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –∏–Ω–¥—É—Å—Ç—Ä–∏—é –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –º—ã —Å–æ–∑–¥–∞—ë–º AI-–∞–≥–µ–Ω—Ç–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—à–µ–π —Å—Ñ–µ—Ä—ã –±–∏–∑–Ω–µ—Å–∞
          </p>
        </div>

        {!selectedIndustry ? (
          // Industry Selection
          <div className="grid md:grid-cols-3 gap-6">
            {industries.map((industry) => (
              <Card 
                key={industry.id}
                className="bg-[var(--dark-secondary)]/30 border-[var(--dark-border)] hover:border-[var(--accent-primary)]/50 transition-all duration-500 cursor-pointer group"
                onClick={() => startProcess(industry)}
                data-testid={`industry-${industry.id}`}
              >
                <div className="p-6">
                  <div className="text-3xl mb-4">{industry.icon}</div>
                  <h3 className="text-xl font-medium mb-2 text-white group-hover:text-[var(--accent-primary)] transition-colors">
                    {industry.name}
                  </h3>
                  <p className="text-sm text-[var(--text-muted)] mb-4 leading-relaxed">
                    {industry.description}
                  </p>
                  <div className="space-y-2">
                    <div className="text-xs text-[var(--text-subtle)] font-medium">
                      –¢–∏–ø–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:
                    </div>
                    {industry.challenges.slice(0, 2).map((challenge, index) => (
                      <div key={index} className="text-xs text-[var(--text-muted)] flex items-start space-x-2">
                        <div className="w-1 h-1 bg-[var(--accent-primary)] rounded-full mt-2 flex-shrink-0"></div>
                        <span>{challenge}</span>
                      </div>
                    ))}
                  </div>
                  <div className="mt-4 pt-4 border-t border-[var(--dark-border)]/50">
                    <span className="text-xs text-[var(--accent-primary)] font-medium">
                      –°–æ–∑–¥–∞—Ç—å AI-–∞–≥–µ–Ω—Ç–∞ ‚Üí
                    </span>
                  </div>
                </div>
              </Card>
            ))}
          </div>
        ) : (
          // Process Visualization
          <div className="space-y-8">
            {/* Header with selected industry */}
            <div className="text-center">
              <div className="inline-flex items-center space-x-3 bg-[var(--dark-secondary)]/50 rounded-2xl px-6 py-3 border border-[var(--dark-border)]">
                <span className="text-2xl">{selectedIndustry.icon}</span>
                <div className="text-left">
                  <div className="text-sm text-[var(--text-subtle)]">–°–æ–∑–¥–∞—ë–º AI –¥–ª—è:</div>
                  <div className="font-medium text-[var(--accent-primary)]">{selectedIndustry.name}</div>
                </div>
              </div>
            </div>

            {/* Process Steps */}
            <div className="grid lg:grid-cols-3 gap-8">
              {processSteps.map((step, index) => (
                <div 
                  key={step.id}
                  className={`relative ${
                    currentStep === index && isProcessing 
                      ? 'ring-2 ring-[var(--accent-primary)]/50' 
                      : currentStep > index 
                        ? 'ring-2 ring-green-500/50' 
                        : ''
                  } bg-[var(--dark-secondary)]/30 rounded-2xl p-6 border border-[var(--dark-border)] transition-all duration-500`}
                  data-testid={`process-step-${step.id}`}
                >
                  <div className="flex items-center space-x-3 mb-4">
                    <div 
                      className={`w-8 h-8 rounded-xl flex items-center justify-center text-sm font-medium transition-all duration-500 ${
                        currentStep === index && isProcessing
                          ? 'bg-[var(--accent-primary)] text-white animate-pulse'
                          : currentStep > index
                            ? 'bg-green-500 text-white'
                            : 'bg-[var(--dark-tertiary)] text-[var(--text-subtle)]'
                      }`}
                    >
                      {currentStep > index ? '‚úì' : step.id}
                    </div>
                    <h3 className="font-medium text-white">{step.title}</h3>
                  </div>
                  
                  <p className="text-sm text-[var(--text-muted)] mb-4">
                    {step.description}
                  </p>

                  {currentStep === index && isProcessing && (
                    <div className="space-y-2">
                      {currentStepDetails.map((detail, detailIndex) => (
                        <div 
                          key={detailIndex}
                          className={`text-xs text-[var(--text-muted)] flex items-start space-x-2 transition-all duration-300 ${
                            detailIndex < visibleDetails 
                              ? 'opacity-100 translate-x-0' 
                              : 'opacity-0 translate-x-4'
                          }`}
                        >
                          <div className="w-1 h-1 bg-[var(--accent-primary)] rounded-full mt-2 flex-shrink-0 animate-pulse"></div>
                          <span>{detail}</span>
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              ))}
            </div>

            {/* Results */}
            {processComplete && (
              <div className="bg-gradient-to-br from-[var(--accent-primary)]/5 to-[var(--accent-secondary)]/5 rounded-2xl p-8 border border-[var(--accent-primary)]/20 animate-fade-in">
                <div className="text-center mb-6">
                  <h3 className="text-xl font-medium text-[var(--accent-primary)] mb-2">
                    üéâ AI-–∞–≥–µ–Ω—Ç –≥–æ—Ç–æ–≤!
                  </h3>
                  <p className="text-[var(--text-muted)]">
                    –¢–µ–ø–µ—Ä—å –≤–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã –ø–æ–ª—É—á–∞—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ {selectedIndustry.name.toLowerCase()}
                  </p>
                </div>

                {/* Sample interaction */}
                <div className="bg-[var(--dark-bg)]/50 rounded-xl p-4 mb-6">
                  <div className="text-xs text-[var(--text-subtle)] mb-3">–ü—Ä–∏–º–µ—Ä –¥–∏–∞–ª–æ–≥–∞:</div>
                  <div className="space-y-3">
                    <div className="flex justify-end">
                      <div className="bg-[var(--dark-tertiary)] rounded-lg px-3 py-2 max-w-xs">
                        <div className="text-sm text-white">
                          {selectedIndustry.sampleQuestions[0]}
                        </div>
                      </div>
                    </div>
                    <div className="flex justify-start">
                      <div className="bg-gradient-to-r from-[var(--accent-primary)]/20 to-[var(--accent-secondary)]/20 rounded-lg px-3 py-2 max-w-xs border border-[var(--accent-primary)]/30">
                        <div className="text-sm text-white">
                          {selectedIndustry.aiSolutions[0]}
                        </div>
                        <div className="text-xs text-[var(--text-subtle)] mt-1">
                          –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –∑–∞ 0.3 —Å–µ–∫ ‚Ä¢ AI-–∞–≥–µ–Ω—Ç
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="flex justify-center space-x-4">
                  <Button
                    onClick={resetLab}
                    variant="outline"
                    className="bg-[var(--dark-tertiary)]/50 border-[var(--dark-border)] text-[var(--text-muted)] hover:bg-[var(--dark-secondary)]/70 hover:text-white"
                    data-testid="button-try-another"
                  >
                    –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥—É—é –∏–Ω–¥—É—Å—Ç—Ä–∏—é
                  </Button>
                  <Button
                    onClick={onContactModalOpen}
                    className="bg-gradient-to-r from-[var(--accent-primary)] to-[var(--accent-secondary)] hover:from-[var(--accent-primary)]/90 hover:to-[var(--accent-secondary)]/90 text-white"
                    data-testid="button-create-for-me"
                  >
                    –°–æ–∑–¥–∞—Ç—å —Ç–∞–∫–æ–≥–æ –¥–ª—è –º–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
                  </Button>
                </div>
              </div>
            )}
          </div>
        )}
      </div>
    </section>
  );
}